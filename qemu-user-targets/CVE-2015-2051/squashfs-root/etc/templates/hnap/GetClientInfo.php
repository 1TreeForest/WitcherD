<? include "/htdocs/phplib/html.php";
if($Remove_XML_Head_Tail != 1)	{HTML_hnap_200_header();}

include "/htdocs/phplib/xnode.php";
include "/htdocs/webinc/config.php";
include "/htdocs/phplib/trace.php"; 
include "/htdocs/phplib/phyinf.php";
include "/htdocs/phplib/inf.php"; 
$result = "OK";

function find_wireless_client($macinfo)
{
	$uid="";
	foreach("/runtime/phyinf")
	{
		if(query("type")=="wifi")
		{
			$wlan_uid = query("uid");
			foreach("media/clients/entry")
			{
				$mac = tolower(query("macaddr"));
				if($macinfo == $mac) { $uid = $wlan_uid; break; }
			}
		}
	}
	return $uid;
}

function find_dhcps4_staticleases_info($mac, $getinfo, $LAN1, $LAN2)
{
	foreach("/dhcps4/entry")
	{
		$dhcps4_name = get("", "uid");
		foreach("staticleases/entry")
		{
			if(PHYINF_macnormalize($mac)==PHYINF_macnormalize(get("", "macaddr")))
			{
				if($getinfo=="nickname")	
				{return get("", "description");}
				else if($getinfo=="reserveip" && get("", "hostid")!="")
				{
					if($dhcps4_name==get("", INF_getinfpath($LAN1)."/dhcps4"))
					{return ipv4ip(INF_getcurripaddr($LAN1), INF_getcurrmask($LAN1), get("", "hostid"));}
					else
					{return	ipv4ip(INF_getcurripaddr($LAN2), INF_getcurrmask($LAN2), get("", "hostid"));}					
				}
			}
		}	
	}
	return "";
}

function getIPv6AddrByMAC($mac)
{
	$info_p = XNODE_getpathbytarget("/runtime/mydlink/userlist","entry", "macaddr",$mac,"0");
	if ($info_p == "")
	{ return ""; }
	return get("x",$info_p."/ipv6addr");
}

function clienttype($client, $WLAN1, $WLAN1_GZ, $WLAN2, $WLAN2_GZ, $WLAN3, $WLAN3_GZ)
{
	if($client == $WLAN1) { $type = "WiFi_2.4G"; }
	else if($client == $WLAN1_GZ) { $type = "WiFi_2.4G_Guest"; }
	else if($client == $WLAN2 || $client == $WLAN3) { $type = "WiFi_5G"; }
	else if($client == $WLAN2_GZ || $client == $WLAN3_GZ) { $type = "WiFi_5G_Guest"; }
	else { $type = "LAN"; }
	
	return $type;
}

function clientinfo($mac, $ipaddr, $type, $hostname, $nickname, $reserveip)
{
	echo "			<ClientInfo>\n";
	echo "				<MacAddress>".$mac."</MacAddress>\n";
	echo "				<IPv4Address>".$ipaddr."</IPv4Address>\n";
	echo "				<IPv6Address>".getIPv6AddrByMAC($mac)."</IPv6Address>\n";	//+++ HuanYao Kang.
	echo "				<Type>".$type."</Type>\n";
	echo "				<DeviceName>".$hostname."</DeviceName>\n";
	echo "				<NickName>".$nickname."</NickName>\n";
	echo "				<ReserveIP>".$reserveip."</ReserveIP>\n";
	echo "			</ClientInfo>\n";
}

?>
<? if($Remove_XML_Head_Tail != 1)	{HTML_hnap_xml_header();}?>
<GetClientInfoResponse xmlns="http://purenetworks.com/HNAP1/">
	<GetClientInfoResult><?=$result?></GetClientInfoResult>
		<ClientInfoLists>
		<?
		
		/* It shows LAN and wireless Host Zone STA are from to the same interface eth0.1 due to accelerate when we use brctl command,
		   so it is hard to verify the client from br0 are eth0 or wifig0, wifia0, wifia1.
		   This also cause Guest Zone STA show in the Primay block.
		   Now we use /runtime/phyinf node instead of brctl command to check client is from wireless or LAN. */
		
		$mydlin_ver = fread("s", "/mydlink/version");
		
		if($mydlin_ver != "")
		{
			/* MAC OS 10.7 would not supply hostname in DHCP process. It could not get the hostname in /runtime/inf(LAN-1)/dhcps4/leases.
	  	   However, Mydlink service would use Netbios to get the client information include hostname and the information from static client. */
			foreach("/runtime/mydlink/userlist/entry")
			{
				$ipaddr = query("ipv4addr");
				$macaddr = query("macaddr");
				$wlan_client = find_wireless_client($macaddr);
				$type = clienttype($wlan_client, $WLAN1, $WLAN1_GZ, $WLAN2, $WLAN2_GZ, $WLAN3, $WLAN3_GZ);
				$hostname = query("hostname");
				$nickname = find_dhcps4_staticleases_info($macaddr, "nickname", $LAN1, $LAN2);
				$reserveip = find_dhcps4_staticleases_info($macaddr, "reserveip", $LAN1, $LAN2);
				clientinfo($macaddr, $ipaddr, $type, $hostname, $nickname, $reserveip);
			}
		}
		else
		{
			/* If Mydlink service is not supported get the DHCP client information from our DHCP leases. */
			$LAN=$LAN1;
			while($LAN != "")
			{		
				$path = XNODE_getpathbytarget("/runtime", "inf", "uid", $LAN, 0);
				foreach($path."/dhcps4/leases/entry")
				{
					$ipaddr = query("ipaddr");
					$macaddr = query("macaddr");
					$wlan_client = find_wireless_client($macaddr);
					$type = clienttype($wlan_client, $WLAN1, $WLAN1_GZ, $WLAN2, $WLAN2_GZ, $WLAN3, $WLAN3_GZ);
					$hostname = query("hostname");
					$nickname = find_dhcps4_staticleases_info($macaddr, "nickname", $LAN1, $LAN2);
					$reserveip = find_dhcps4_staticleases_info($macaddr, "reserveip", $LAN1, $LAN2);
					clientinfo($macaddr, $ipaddr, $type, $hostname, $nickname, $reserveip);
				}
							
				if($LAN==$LAN1)	{$LAN = $LAN2;}
				else			{$LAN = "";}
			}
		}
		?>
		</ClientInfoLists>
</GetClientInfoResponse>
<? if($Remove_XML_Head_Tail != 1)	{HTML_hnap_xml_tail();}?>
